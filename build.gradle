plugins {
    id("org.springframework.boot") version "2.1.3.RELEASE"
    id("io.spring.dependency-management") version "1.0.6.RELEASE"

    id("org.jetbrains.kotlin.jvm") version "1.3.21"
    id("org.jetbrains.kotlin.plugin.spring") version "1.3.21"
}

repositories {
    mavenCentral()
}

group = "com.ahelgeso"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}


sourceSets {
    testFramework {
        kotlin {
            compileClasspath += main.output
            runtimeClasspath += main.runtimeClasspath
            srcDir("test/framework/kotlin")
        }
    }

    test {
        kotlin {
            compileClasspath += main.output + testFramework.output
            runtimeClasspath += testFramework.runtimeClasspath

            srcDir("test/unit/kotlin")
        }
    }
    integrationTest {
        kotlin {
            compileClasspath += main.output + testFramework.output
            runtimeClasspath += testFramework.runtimeClasspath

            srcDir("test/integration/kotlin")
        }
    }

    systemTest {
        kotlin {
            compileClasspath += main.output + testFramework.output
            runtimeClasspath += testFramework.output

            srcDir("test/system/kotlin")
        }
    }
}

configurations {
    // This may seem backwards. This dev only configuration is used to add the dev tools
    // and spring automatically excludes that jar when building an uber jar.
    runtimeClasspath.extendsFrom developmentRuntimeClasspath

    testFrameworkImplementation.extendsFrom implementation
    testFrameworkRuntimeOnly.extendsFrom runtimeOnly
    testFramework.extendsFrom testFrameworkRuntimeClasspath

    testImplementation.extendsFrom testFrameworkImplementation
    testRuntimeOnly.extendsFrom testFrameworkRuntimeOnly

    integrationTestImplementation.extendsFrom testFrameworkImplementation
    integrationTestRuntimeOnly.extendsFrom testFrameworkRuntimeOnly

    systemTestImplementation.extendsFrom testFrameworkImplementation
    systemTestRuntimeOnly.extendsFrom testFrameworkRuntimeOnly
}

dependencies {
    // Mostly to avoid HTTP caching which makes it hard to iterate on web pages
    developmentRuntimeClasspath("org.springframework.boot:spring-boot-devtools")

    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-security")

    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")

    // Not available on normal repos so it's being vendoring
    // See: https://github.com/mvysny/gphoto2-java
    implementation files("lib/gphoto2-java-1.5.jar")
    // Used by the gphoto2 bindings
    implementation("net.java.dev.jna:jna:4.2.2")
    implementation("org.apache.logging.log4j:log4j-core:2.11.1")

    // For the web
    implementation("org.webjars:webjars-locator:0.36")
    implementation("org.webjars:bootstrap:4.2.1")
    implementation("org.webjars:jquery:3.3.1-2")
    implementation("org.webjars:popper.js:1.14.6")

    testFrameworkImplementation("org.jetbrains.kotlin:kotlin-test-junit")
    testFrameworkImplementation("com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0")
    testFrameworkImplementation("org.springframework.boot:spring-boot-starter-test")
    testFrameworkImplementation("com.willowtreeapps.assertk:assertk-jvm:0.12")
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

task systemTest(type: Test) {
    testClassesDirs = sourceSets.systemTest.output.classesDirs
    classpath = sourceSets.systemTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

bootRun {
    args = ["--spring.profiles.active=dev"]
//    "--spring.profiles.active=dev"
}

check.dependsOn integrationTest
check.dependsOn systemTest
// Run in order of increasing expense
integrationTest.mustRunAfter test
systemTest.mustRunAfter integrationTest
