buildscript {
    ext {
        kotlinVersion = '1.2.71'
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.ahelgeso'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}

sourceSets {
    test {
        kotlin {
            srcDir 'src/test/framework/kotlin'
        }
    }

    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir 'src/integration-test/kotlin'
        }
	resources.srcDir file('src/integration-test/resources')
    }

    systemTest {
        kotlin {
            compileClasspath += main.output + test.output + integrationTest.output
            runtimeClasspath += main.output + test.output + integrationTest.output
            srcDir 'src/system-test/kotlin'
        }
	resources.srcDir file('src/system-test/resources')
    }
}

configurations {
    developmentOnly
    runtimeClasspath.extendsFrom developmentOnly

    integrationTestCompile.extendsFrom testCompile
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime

    systemTestCompile.extendsFrom integrationTestCompile
    systemTestImplementation.extendsFrom integrationTestImplementation
    systemTestRuntime.extendsFrom integrationTestRuntime
}

dependencies {
    // Mostly to avoid HTTP caching which makes it hard to iterate on web pages
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")

    // Not available on normal repos so it's being vendoring
    // See: https://github.com/mvysny/gphoto2-java
    compile files('lib/gphoto2-java-1.5.jar')
    // Used by the gphoto2 bindings
    compile 'net.java.dev.jna:jna:4.2.2'
    compile 'org.apache.logging.log4j:log4j-core:2.11.1'

    // For the web
    compile 'org.webjars:webjars-locator:0.36'
    compile 'org.webjars:bootstrap:4.2.1'
    compile 'org.webjars:jquery:3.3.1-2'
    compile 'org.webjars:popper.js:1.14.6'

    testCompile "org.jetbrains.kotlin:kotlin-test-junit"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0"
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testCompile 'com.willowtreeapps.assertk:assertk-jvm:0.12'
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

task systemTest(type: Test) {
    testClassesDir = sourceSets.systemTest.output.classesDir
    classpath = sourceSets.systemTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
check.dependsOn systemTest
// Run in order of increasing expense
integrationTest.mustRunAfter test
systemTest.mustRunAfter integrationTest
